{"version":3,"sources":["components/CitiesAdder.js","containers/CitiesList/CitiesListItem.js","actions/citiesActions.js","containers/CitiesList/index.js","components/Detail/Forecast.js","components/Detail/index.js","App.js","reducers/cities.js","reducers/index.js","store/configureStore.js","store/storeSaver.js","index.js"],"names":["CitiesAdder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","address","setState","abilityToAdd","handleSelect","geocodeByAddress","then","results","cityObj","name","coordinates","lat","geometry","location","lng","catch","error","console","handleButton","uniqueId","Date","valueOf","addCityAction","objectSpread","state","react_default","a","createElement","index_es","elevation","style","padding","marginBottom","variant","component","align","lineHeight","fontSize","dist_default","value","onChange","onSelect","searchOptions","types","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","position","assign","label","className","backgroundColor","map","suggestion","active","cursor","description","onClick","disabled","color","width","Component","CitiesListItem","city","removeCityAction","selected","button","itemClickHeandler","bind","primary","secondary","Math","floor","weather","main","temp","aria-label","Delete_default","getWeatherNowAction","_this$props","setDetailCityAction","PureComponent","API_KEY","ADD_CITY","REMOVE_CITY","GET_WEATHER_REQUEST","GET_WEATHER_SUCCESS","SET_DETAIL_CITY","GET_FORECAST_REQUEST","GET_FORECAST_SUCCESS","CitiesList","cities","citiesList","activeUniqueId","empty","gcomponent","Info_default","length","index","CitiesList_CitiesListItem","key","connect","store","dispatch","type","payload","_city$coordinates","fetch","concat","response","json","log","getWeatherNow","setDetailCity","Forecast","forecast","keys","day","item","date","Number","show","itemArray","textTransform","toLocaleString","weekday","getDate","month","src","icon","alt","DetailForecast","cityDetail","year","background","pressure","humidity","wind","speed","ArrowUpward_default","transform","deg","Detail_Forecast","getForecastAction","nextProps","setTimeout","JSON","stringify","Detail","Detail_DetailForecast","App","find","container","spacing","xs","components_CitiesAdder","containers_CitiesList","components_Detail","addCity","_city$coordinates2","forecastDays","today","getDay","list","forEach","i","dt","Array","isArray","push","getForecast","initialState","rootReducer","combineReducers","arguments","undefined","action","copy","toConsumableArray","splice","some","arg","applyMiddleware","thunk","next","localStorage","setItem","getState","getItem","parse","createStore","apply","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1083050b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { Typography, Paper, TextField, List, ListItem, ListItemText, Button } from '@material-ui/core';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport {\r\n  geocodeByAddress\r\n} from 'react-places-autocomplete';\r\n\r\nclass CitiesAdder extends Component {\r\n\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = { \r\n\t\t    address: '',\r\n\t\t    abilityToAdd: false\r\n\t    };\r\n\t    this.cityObj = {\r\n\t\t  \tcoordinates: {}\r\n\t  \t};\r\n  \t}\r\n \r\n\thandleChange = address => {\r\n\t    this.setState({ \r\n\t    \taddress: address,\r\n\t    \tabilityToAdd: false\r\n\t    });\r\n\t};\r\n \r\n\thandleSelect = address => {\t\r\n\t  \tthis.setState({\r\n\t  \t\taddress: address\r\n\t  \t});\r\n\t  \tgeocodeByAddress(address).then(results => {\r\n\t  \t\tthis.cityObj.name = results[0]['address_components'][0]['long_name'];\r\n\t  \t\treturn results;\r\n\t  \t})\r\n\t  \t.then(results => {\r\n\t  \t\tthis.cityObj.coordinates.lat = results[0].geometry.location.lat();\r\n\t  \t\tthis.cityObj.coordinates.lng = results[0].geometry.location.lng();\r\n\t  \t\tthis.setState({\r\n\t  \t\t\tabilityToAdd: true\r\n\t  \t\t});\r\n\t  \t\treturn results;\r\n\t  \t})\r\n\t  \t.catch(error => console.error('Error', error));\r\n\t};\r\n\r\n\thandleButton = () => {\r\n\t\tthis.cityObj.uniqueId = new Date().valueOf();\r\n\t\tthis.props.addCityAction({...this.cityObj});\r\n\t\tthis.setState({\r\n\t  \t\taddress: '',\r\n\t  \t\tabilityToAdd: false\r\n\t  \t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst searchOptions = {\r\n\t\t\ttypes: ['(cities)']\r\n\t\t};\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Paper elevation={1} style={{padding: '15px', marginBottom: '16px'}}>\r\n\t\t\t\t<Typography variant=\"h6\" component=\"h6\"\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tstyle={{lineHeight: 'normal', fontSize: '1.15rem', marginBottom: '16px'}}>\r\n          \t\t\tДобавьте нужный город в список\r\n        \t\t</Typography>\r\n      \t\t\t<PlacesAutocomplete\r\n        \t\t\tvalue={this.state.address}\r\n        \t\t\tonChange={this.handleChange}\r\n        \t\t\tonSelect={this.handleSelect}\r\n        \t\t\tsearchOptions={searchOptions}\r\n      \t\t\t\t>\r\n        \t\t{({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          \t\t<div style={{position: 'relative', marginBottom: '16px'}}>\r\n\t\t            <TextField\r\n\t\t            \tvariant=\"outlined\"\r\n\t\t            \tlabel=\"Название города\"\r\n\t\t            \tclassName=\"cities-adder-field\"\r\n\t\t\t\t\t\t{...getInputProps()}\r\n\t\t      \t\t\t/>\r\n\t\t\t            <List className=\"autocomplete-dropdown-container\">\r\n\t\t\t              {loading && <ListItem style={{backgroundColor: '#ffffff'}}>\r\n\t\t\t              \t\t\t\t<ListItemText>Поиск...</ListItemText>\r\n\t\t\t              \t\t\t  </ListItem>}\r\n\t\t\t              {suggestions.map(suggestion => {\r\n\t\t\t                const className = suggestion.active\r\n\t\t\t                  ? 'suggestion-item--active'\r\n\t\t\t                  : 'suggestion-item';\r\n\t\t\t                // inline style for demonstration purpose\r\n\t\t\t                const style = suggestion.active\r\n\t\t\t                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n\t\t\t                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n\t\t\t                return (\r\n\t\t\t                  <ListItem\r\n\t\t\t                    {...getSuggestionItemProps(suggestion, {\r\n\t\t\t                      className,\r\n\t\t\t                      style,\r\n\t\t\t                    })}\r\n\t\t\t                  >\r\n\t\t\t                    <ListItemText>{suggestion.description}</ListItemText>\r\n\t\t\t                  </ListItem>\r\n\t\t\t                );\r\n\t\t\t              })}\r\n\t\t\t            </List>\r\n          \t\t</div>\r\n        \t\t)}\r\n      \t\t\t</PlacesAutocomplete>\r\n\t\t      \t<Button variant=\"contained\" \r\n\t\t      \t\t\talign=\"center\"\r\n\t\t      \t\t\tonClick={this.handleButton}\r\n\t\t      \t\t\tdisabled={!this.state.abilityToAdd} \r\n\t\t      \t\t\tcolor=\"primary\" style={{width: '100%'}}>\r\n\t\t        \tДобавить\r\n\t\t      \t</Button>\r\n\t\t\t</Paper>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CitiesAdder","import React, {PureComponent} from 'react';\r\nimport { ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass CitiesListItem extends PureComponent {\r\n\r\n\trender() {\r\n\t\tconst {city} = this.props;\r\n\t\tconst {removeCityAction} = this.props;\r\n\t\tconst {selected} = this.props;\r\n\t\t//\r\n\t\treturn (\r\n\t\t\t<ListItem button selected={selected} onClick={this.itemClickHeandler.bind(this)}>\r\n\t\t\t    <ListItemText\r\n\t\t\t        primary={city.name}\r\n\t\t\t        secondary={ ('weather' in city)? Math.floor(+city.weather.main.temp) + '\\u2103' : null }/>\r\n\t\t\t    <ListItemSecondaryAction>\r\n\t\t\t        <IconButton aria-label=\"Delete\" onClick={removeCityAction}>\r\n\t\t\t            <DeleteIcon />\r\n\t\t\t        </IconButton>\r\n\t\t\t    </ListItemSecondaryAction>\r\n            </ListItem>\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getWeatherNowAction(this.props.city); //получаем погоду для элемента списка\r\n\t}\r\n\r\n\titemClickHeandler() {\r\n\t\tlet {city, setDetailCityAction} = this.props;\r\n\t\tsetDetailCityAction(city.uniqueId);\r\n\t}\r\n\r\n}\r\n\r\nexport default CitiesListItem","const API_KEY = '6df1ef1d951078e6cf82a1e62947f6f0';\r\nexport const ADD_CITY = 'ADD_CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\nexport const SET_ACTIVE_CITY = 'SET_ACTIVE_CITY';\r\nexport const GET_WEATHER_REQUEST = 'GET_WEATHER_REQUEST';\r\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\r\nexport const SET_DETAIL_CITY = 'SET_DETAIL_CITY';\r\nexport const GET_FORECAST_REQUEST = 'GET_FORECAST_REQUEST';\r\nexport const GET_FORECAST_SUCCESS = 'GET_FORECAST_SUCCESS';\r\n\r\nexport function addCity(city) {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city,\r\n  }\r\n}\r\n\r\nexport function removeCity(listIndex) {\r\n\treturn {\r\n\t\ttype: REMOVE_CITY,\r\n\t\tpayload: listIndex\r\n\t}\r\n}\r\n\r\nexport function getWeatherNow(city) {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t    \ttype: GET_WEATHER_REQUEST\r\n    \t});\r\n\r\n    \tlet { lat, lng } = city.coordinates;\r\n\t\t\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/weather?\r\n\t\t\tlat=${lat}\r\n\t\t\t&lon=${lng}\r\n\t\t\t&units=metric\r\n\t\t\t&lang=ru\r\n\t\t\t&appid=${API_KEY}`)\r\n\t\t  \t.then(function(response) {\r\n\t\t\t\treturn response.json();\r\n   \t\t\t})\r\n\t\t    .then(function(weather) {\r\n\t\t    \tdispatch({\r\n        \t\t\ttype: GET_WEATHER_SUCCESS,\r\n        \t\t\tpayload: weather,\r\n        \t\t\tuniqueId: city.uniqueId\r\n      \t\t\t});\r\n\t\t    })\r\n\t\t  \t.catch( console.log );\r\n\t}\r\n}\r\n\r\nexport function setDetailCity(uniqueId) {\r\n\treturn {\r\n\t\ttype: SET_DETAIL_CITY,\r\n\t\tpayload: uniqueId\r\n\t}\r\n}\r\n\r\nexport function getForecast(city) {\r\n\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t    \ttype: GET_FORECAST_REQUEST\r\n    \t});\r\n\r\n    \tlet { lat, lng } = city.coordinates;\r\n\t\t\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?\r\n\t\t\tlat=${lat}\r\n\t\t\t&lon=${lng}\r\n\t\t\t&units=metric\r\n\t\t\t&lang=ru\r\n\t\t\t&appid=${API_KEY}`)\r\n\t\t  \t.then(function(response) {\r\n\t\t\t\treturn response.json();\r\n   \t\t\t})\r\n\t\t    .then(function(forecast) {\r\n\t\t    \tlet forecastDays = {};  //Сортируем по дням\r\n\t\t    \tlet today = new Date().getDay();\r\n\t\t    \tforecast.list.forEach((item,i)=>{\r\n\t\t    \t\tlet day = new Date( Number(item.dt + '000') ).getDay();\r\n\t\t    \t\tif (day !== today) {\r\n\t\t    \t\t\tif ( Array.isArray(forecastDays[day]) ){\r\n\t\t    \t\t\t\tforecastDays[day].push(item);\r\n\t\t    \t\t\t} else {\r\n\t\t\t\t\t\t\tforecastDays[day] = [];\r\n\t\t\t\t\t\t\tforecastDays[day].push(item);\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\t\r\n\t\t    \t\t}\r\n\t\t    \t});\r\n\t\t    \tdispatch({\r\n        \t\t\ttype: GET_FORECAST_SUCCESS,\r\n        \t\t\tpayload: forecastDays,\r\n        \t\t\tuniqueId: city.uniqueId\r\n      \t\t\t});\r\n\t\t    })\r\n\t\t  \t.catch( console.log );\r\n\t}\r\n\r\n}","import React, {PureComponent} from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { List, ListItem, Paper, Typography } from '@material-ui/core';\r\nimport CitiesListItem from './CitiesListItem';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { removeCity, getWeatherNow, setDetailCity } from '../../actions/citiesActions';\r\n\r\nclass CitiesList extends PureComponent {\r\n\r\n\trender() {\r\n\r\n\tconst cities = this.props.citiesList;\r\n\tconst { removeCityAction, getWeatherNowAction, setDetailCityAction } = this.props;\r\n\tconst { activeUniqueId } = this.props;\r\n\tconst empty = <ListItem>\r\n\t\t\t\t\t<Typography gcomponent=\"p\" style={{padding: '15px'}}>\r\n            \t\t \tСписок городов пуст\r\n          \t\t  \t</Typography>\r\n          \t\t  \t<InfoIcon/>\r\n          \t\t  \t</ListItem>\r\n\r\n\t\treturn (\r\n\t\t\t<Paper>\r\n\t\t\t\t<List component=\"nav\">\r\n\t\t\t\t\t{ cities.length ? null : empty }\r\n\t\t\t\t\t{cities.map( function(city, index){\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<CitiesListItem \r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tcity={city} \r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\tselected={city.uniqueId === activeUniqueId}\r\n\t\t\t\t\t\t\t\tgetWeatherNowAction={getWeatherNowAction}\r\n\t\t\t\t\t\t\t\tsetDetailCityAction={setDetailCityAction}\r\n\t\t\t\t\t\t\t\tremoveCityAction={removeCityAction.bind(null,index)} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} )}\r\n\t\t\t\t</List>\r\n\t\t\t</Paper>\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nCitiesList.propTypes = {\r\n\tcitiesList: propTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\treturn {\r\n\t\tactiveUniqueId: store.cities.activeUniqueId,\r\n\t\tcitiesList: store.cities.citiesList\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tremoveCityAction: index => dispatch(removeCity(index)),\r\n\t\tgetWeatherNowAction: city => dispatch(getWeatherNow(city)),\r\n\t\tsetDetailCityAction: uniqueId => dispatch(setDetailCity(uniqueId))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesList)","import React from 'react';\r\n\r\nconst Forecast = (props) => {\r\n\tconst { forecast } = props;\r\n\treturn(\r\n\t\t<div className=\"forecast\">\r\n\t\t\t{ Object.keys(forecast).map(function(day,index){\r\n\t\t\t\tlet item = forecast[day];\r\n\t\t\t\tlet date = new Date( Number(item[0]['dt'] + '000') );\r\n\t\t\t\tlet show = (itemArray) => {\r\n\t\t\t\t\treturn itemArray.length > 5 ? itemArray[5] : itemArray[itemArray.length - 1]\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={index} className=\"content-last\">\r\n\t\t\t\t\t\t<h6 style={{textTransform: 'capitalize'}}>\r\n\t\t\t\t\t\t\t{date.toLocaleString('ru-ru', {  weekday: 'long' })}\r\n\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t<div style={{textTransform: 'capitalize'}} className=\"data\">\r\n\t\t\t\t\t\t\t{date.getDate()} {date.toLocaleString('ru-ru', {  month: 'short' })}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<img src={`https://openweathermap.org/img/w/${show(item).weather[0].icon}.png`} alt=\" \" />\r\n\t\t\t\t\t\t<div style={{textTransform: 'capitalize'}} className=\"data\">\r\n\t\t\t\t\t\t\t{show(item).weather[0].description}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p>{Math.floor(show(item).main.temp) + '\\u2103'}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}) }\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Forecast","import React, {PureComponent} from 'react';\r\nimport { Paper, Typography, Table, TableBody, TableRow, TableCell, LinearProgress } from '@material-ui/core';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Forecast from './Forecast';\r\n\r\nconst Detail = (props) => {\r\n\tconst {cityDetail} = props;\r\n\tconst {getForecastAction} = props;\r\n\r\n\tconst empty = <Typography variant=\"h6\" component=\"h5\">\r\n          \t\t\tВыберите нужный город из списка \r\n        \t\t  </Typography>;\r\n\r\n\treturn(\r\n\t\t<Paper elevation={1} style={{padding: '24px'}}>\r\n\t\t\t{ cityDetail && 'weather' in cityDetail ? <DetailForecast \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityDetail={cityDetail}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetForecastAction={getForecastAction}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweather={cityDetail.weather} /> : empty } \r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nclass DetailForecast extends PureComponent {\r\n\r\n\trender() {\r\n\t\tconst { weather, cityDetail } = this.props;\r\n\t\tconst date = new Date().toLocaleString('ru', {year: 'numeric', month: 'long', day: 'numeric'});\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"content-top\">\r\n        \t\t<div className=\"top\">\r\n\t\t\t\t\t<div className=\"content-left\">\r\n\t\t\t\t\t\t<h6>{date}</h6>\r\n\t\t\t\t\t\t<h2>{Math.floor(weather.main.temp)}&#176;C</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content-right\">\r\n\t\t\t\t\t\t<h5 style={{textTransform: 'capitalize'}}>{weather.weather[0].description}</h5>\r\n\t\t\t\t\t\t<img src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`} alt=\" \" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content-table\">\r\n\t\t\t\t\t\t<Table style={{background: '#FFFFFF', fontSize: '13px'}}>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Атмосферное давление</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell><b>{weather.main.pressure}  гПа</b></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Влажность</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell><b>{weather.main.humidity}  %</b></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Скорость ветра</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell><b>{weather.wind.speed}  м/с</b></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Направление ветра</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<ArrowUpward \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{transform: `rotate(${weather.wind.deg}deg)`, color: '#DD4F43'}}/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"forecast-wrap\">\r\n\t\t\t\t\t<h6 className=\"forecast-header\">\r\n\t        \t\t\tПрогноз:\r\n\t      \t\t\t</h6>\r\n\t      \t\t\t{'forecast' in cityDetail ? <Forecast forecast={cityDetail.forecast} /> : <LinearProgress /> }\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet {getForecastAction} = this.props;\r\n\t\tgetForecastAction(this.props.cityDetail);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tlet {getForecastAction} = this.props;\r\n\t\tlet {cityDetail} = this.props;\r\n\r\n\t\tsetTimeout(()=>{\r\n\t\t\tif(JSON.stringify(cityDetail) !== JSON.stringify(nextProps.cityDetail)) {\r\n\t\t\t\tgetForecastAction(nextProps.cityDetail);\r\n\t\t\t}\r\n\t\t},1000);\r\n\t}\r\n\r\n}\r\n\r\nexport default Detail","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CssBaseline, Grid, AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport './App.css';\r\n\r\nimport CitiesAdder from './components/CitiesAdder';\r\nimport CitiesList from './containers/CitiesList';\r\nimport Detail from './components/Detail';\r\n\r\nimport { addCity, getForecast } from './actions/citiesActions';\r\n\r\nclass App extends Component {\r\n\r\n\trender() {\r\n\t\tconsole.log('-TEST-');\r\n\t\tconst {addCityAction, getForecastAction} = this.props;\r\n\t\tconst { activeUniqueId } = this.props;\r\n\t\tconst cityDetail = this.props.cities.find(function(city){\r\n\t\t\treturn city.uniqueId === activeUniqueId ? true : false\r\n\t\t});\r\n\r\n\t\treturn(\r\n\t\t\t<CssBaseline>\r\n\t\t\t\t<AppBar position=\"static\" color=\"primary\" style={{marginBottom: '40px'}}>\r\n\t\t\t        <Toolbar>\r\n\t\t\t          <Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t            Погода в мире\r\n\t\t\t          </Typography>\r\n\t\t\t        </Toolbar>\r\n      \t\t\t</AppBar>\r\n      \t\t\t<Grid className=\"container\" container spacing={16}>\r\n      \t\t\t\t<Grid item xs={3}>\r\n      \t\t\t\t\t<CitiesAdder addCityAction={addCityAction} />\r\n\t\t\t\t\t\t<CitiesList />\r\n      \t\t\t\t</Grid>\r\n      \t\t\t\t<Grid item xs={9}>\r\n      \t\t\t\t\t<Detail cityDetail={cityDetail} getForecastAction={getForecastAction} />\r\n      \t\t\t\t</Grid>\r\n      \t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t</CssBaseline>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\treturn {\r\n\t\tcities: store.cities.citiesList,\r\n\t\tactiveUniqueId: store.cities.activeUniqueId\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\taddCityAction: city => dispatch(addCity(city)),\r\n\t\tgetForecastAction: city => dispatch(getForecast(city))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { ADD_CITY, \r\n\t\t REMOVE_CITY, \r\n\t\t /*GET_WEATHER_REQUEST, */\r\n\t\t GET_WEATHER_SUCCESS,\r\n\t\t SET_DETAIL_CITY,\r\n\t\t GET_FORECAST_SUCCESS,\r\n\t\t  } from '../actions/citiesActions';\r\n\r\nvar initialState = {\r\n\t\tcitiesList: [{\r\n\t\t\tname: 'Киев',\r\n\t\t\tcoordinates: {lat: 50.4501, lng: 30.523400000000038},\r\n\t\t\tuniqueId: new Date().valueOf()\r\n\t\t}],\r\n\t\tactiveUniqueId: null\r\n\t}\r\n\r\nexport default function citiesReducer(state = initialState, action) {\r\n\tconst copy = [...state.citiesList];\r\n\r\n\tswitch(action.type) {\r\n\t\tcase ADD_CITY:\r\n\t\t\treturn {...state, citiesList: [...state.citiesList, action.payload] };\r\n\t\tcase REMOVE_CITY:\r\n\t\t\t\tcopy.splice(action.payload, 1);\r\n\t\t\treturn {...state, citiesList: copy, cityDetail: {} };\r\n\t\tcase GET_WEATHER_SUCCESS:\r\n\t\t\tcopy.some(function(item, index){\r\n\t\t\t\tif(item.uniqueId === action.uniqueId) {\r\n\t\t\t\t\tcopy.splice(index, 1, {...item, weather: action.payload});\r\n\t\t\t\t\treturn true; //оставливаем перебор если Id совпадают \r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\treturn {...state, citiesList: copy}\r\n\t\tcase SET_DETAIL_CITY:\r\n\t\t\treturn {...state, activeUniqueId: action.payload}\r\n\t\tcase GET_FORECAST_SUCCESS:\r\n\t\t\tcopy.some(function(item, index){\r\n\t\t\t\tif(item.uniqueId === action.uniqueId) {\r\n\t\t\t\t\tcopy.splice(index, 1, {...item, forecast: action.payload});\r\n\t\t\t\t\treturn true; //оставливаем перебор если Id совпадают \r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t});\r\n\t\t\treturn {...state, citiesList: copy}\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport citiesReducer from './cities';\r\n\r\nexport const rootReducer = combineReducers({\r\n  cities: citiesReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer} from '../reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { storeSaver } from './storeSaver';\r\n\r\nconst arg = [rootReducer, applyMiddleware(thunk, storeSaver)];\r\n\tif(localStorage.getItem('savedStore') !== null) {\r\n\t\targ.splice(1,0,JSON.parse(localStorage.getItem('savedStore')));\r\n\t}\r\nexport const store = createStore.apply(null, arg);","import { ADD_CITY, REMOVE_CITY } from '../actions/citiesActions';\r\n\r\nexport const storeSaver = store => next => action => {\r\n\tif( action.type === ADD_CITY || action.type === REMOVE_CITY ){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tlocalStorage.setItem('savedStore', JSON.stringify(store.getState()) );\r\n\t\t}, 0);\r\n\t\t\r\n\t}\r\n\r\n  \treturn next(action);\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\n\n\nReactDOM.render(\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<App />\n\t\t\t\t</Provider>, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}