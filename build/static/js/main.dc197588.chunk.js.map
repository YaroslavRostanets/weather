{"version":3,"sources":["components/CitiesAdder.js","containers/CitiesList/CitiesListItem.js","actions/citiesActions.js","containers/CitiesList/index.js","components/Detail/Forecast.js","components/Detail/index.js","App.js","reducers/cities.js","reducers/index.js","store/configureStore.js","store/storeSaver.js","index.js"],"names":["CitiesAdder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","address","setState","abilityToAdd","handleSelect","geocodeByAddress","then","results","cityObj","name","coordinates","lat","geometry","location","lng","catch","error","console","handleButton","uniqueId","Date","valueOf","addCityAction","objectSpread","state","react_default","a","createElement","index_es","elevation","className","variant","component","align","style","lineHeight","fontSize","marginBottom","dist_default","value","onChange","onSelect","searchOptions","types","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","position","assign","label","backgroundColor","map","suggestion","active","cursor","description","onClick","disabled","color","width","Component","CitiesListItem","city","removeCityAction","selected","button","itemClickHeandler","bind","primary","secondary","Math","floor","weather","main","temp","aria-label","Delete_default","getWeatherNowAction","_this$props","setDetailCityAction","PureComponent","API_KEY","ADD_CITY","REMOVE_CITY","GET_WEATHER_REQUEST","GET_WEATHER_SUCCESS","SET_DETAIL_CITY","GET_FORECAST_REQUEST","GET_FORECAST_SUCCESS","CitiesList","cities","citiesList","activeUniqueId","empty","Info_default","length","index","CitiesList_CitiesListItem","key","connect","store","dispatch","type","payload","_city$coordinates","fetch","concat","response","json","log","getWeatherNow","setDetailCity","Forecast","forecast","sortedKeys","keys","sort","b","dt","day","item","date","Number","show","itemArray","textTransform","toLocaleString","weekday","getDate","month","src","icon","alt","DetailForecast","cityDetail","year","background","pressure","humidity","wind","speed","ArrowUpward_default","transform","deg","Detail_Forecast","getForecastAction","nextProps","setTimeout","JSON","stringify","Detail","padding","Detail_DetailForecast","App","find","container","spacing","xs","md","components_CitiesAdder","containers_CitiesList","components_Detail","addCity","_city$coordinates2","forecastDays","today","getDay","list","forEach","i","Array","isArray","push","getForecast","initialState","rootReducer","combineReducers","arguments","undefined","action","copy","toConsumableArray","splice","some","arg","applyMiddleware","thunk","next","localStorage","setItem","getState","getItem","parse","createStore","apply","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.dc197588.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport { Typography, Paper, TextField, List, ListItem, ListItemText, Button } from '@material-ui/core';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport {\r\n  geocodeByAddress\r\n} from 'react-places-autocomplete';\r\n\r\nclass CitiesAdder extends Component {\r\n\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = { \r\n\t\t    address: '',\r\n\t\t    abilityToAdd: false\r\n\t    };\r\n\t    this.cityObj = {\r\n\t\t  \tcoordinates: {}\r\n\t  \t};\r\n  \t}\r\n \r\n\thandleChange = address => {\r\n\t    this.setState({ \r\n\t    \taddress: address,\r\n\t    \tabilityToAdd: false\r\n\t    });\r\n\t};\r\n \r\n\thandleSelect = address => {\t\r\n\t  \tthis.setState({\r\n\t  \t\taddress: address\r\n\t  \t});\r\n\t  \tgeocodeByAddress(address).then(results => {\r\n\t  \t\tthis.cityObj.name = results[0]['address_components'][0]['long_name'];\r\n\t  \t\treturn results;\r\n\t  \t})\r\n\t  \t.then(results => {\r\n\t  \t\tthis.cityObj.coordinates.lat = results[0].geometry.location.lat();\r\n\t  \t\tthis.cityObj.coordinates.lng = results[0].geometry.location.lng();\r\n\t  \t\tthis.setState({\r\n\t  \t\t\tabilityToAdd: true\r\n\t  \t\t});\r\n\t  \t\treturn results;\r\n\t  \t})\r\n\t  \t.catch(error => console.error('Error', error));\r\n\t};\r\n\r\n\thandleButton = () => {\r\n\t\tthis.cityObj.uniqueId = new Date().valueOf();\r\n\t\tthis.props.addCityAction({...this.cityObj});\r\n\t\tthis.setState({\r\n\t  \t\taddress: '',\r\n\t  \t\tabilityToAdd: false\r\n\t  \t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst searchOptions = {\r\n\t\t\ttypes: ['(cities)']\r\n\t\t};\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Paper elevation={1} className=\"cities-adder\">\r\n\t\t\t\t<Typography variant=\"h6\" component=\"h6\"\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tstyle={{lineHeight: 'normal', fontSize: '1.15rem', marginBottom: '16px'}}>\r\n          \t\t\tДобавьте нужный город в список\r\n        \t\t</Typography>\r\n      \t\t\t<PlacesAutocomplete\r\n        \t\t\tvalue={this.state.address}\r\n        \t\t\tonChange={this.handleChange}\r\n        \t\t\tonSelect={this.handleSelect}\r\n        \t\t\tsearchOptions={searchOptions}\r\n      \t\t\t\t>\r\n        \t\t{({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          \t\t<div style={{position: 'relative', marginBottom: '16px'}}>\r\n\t\t            <TextField\r\n\t\t            \tvariant=\"outlined\"\r\n\t\t            \tlabel=\"Название города\"\r\n\t\t            \tclassName=\"cities-adder-field\"\r\n\t\t\t\t\t\t{...getInputProps()}\r\n\t\t      \t\t\t/>\r\n\t\t\t            <List className=\"autocomplete-dropdown-container\">\r\n\t\t\t              {loading && <ListItem style={{backgroundColor: '#ffffff'}}>\r\n\t\t\t              \t\t\t\t<ListItemText>Поиск...</ListItemText>\r\n\t\t\t              \t\t\t  </ListItem>}\r\n\t\t\t              {suggestions.map(suggestion => {\r\n\t\t\t                const className = suggestion.active\r\n\t\t\t                  ? 'suggestion-item--active'\r\n\t\t\t                  : 'suggestion-item';\r\n\t\t\t                // inline style for demonstration purpose\r\n\t\t\t                const style = suggestion.active\r\n\t\t\t                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n\t\t\t                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n\t\t\t                return (\r\n\t\t\t                  <ListItem\r\n\t\t\t                    {...getSuggestionItemProps(suggestion, {\r\n\t\t\t                      className,\r\n\t\t\t                      style,\r\n\t\t\t                    })}\r\n\t\t\t                  >\r\n\t\t\t                    <ListItemText>{suggestion.description}</ListItemText>\r\n\t\t\t                  </ListItem>\r\n\t\t\t                );\r\n\t\t\t              })}\r\n\t\t\t            </List>\r\n          \t\t</div>\r\n        \t\t)}\r\n      \t\t\t</PlacesAutocomplete>\r\n\t\t      \t<Button variant=\"contained\" \r\n\t\t      \t\t\talign=\"center\"\r\n\t\t      \t\t\tonClick={this.handleButton}\r\n\t\t      \t\t\tdisabled={!this.state.abilityToAdd} \r\n\t\t      \t\t\tcolor=\"primary\" style={{width: '100%'}}>\r\n\t\t        \tДобавить\r\n\t\t      \t</Button>\r\n\t\t\t</Paper>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default CitiesAdder","import React, {PureComponent} from 'react';\r\nimport { ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass CitiesListItem extends PureComponent {\r\n\r\n\trender() {\r\n\t\tconst {city} = this.props;\r\n\t\tconst {removeCityAction} = this.props;\r\n\t\tconst {selected} = this.props;\r\n\t\t//\r\n\t\treturn (\r\n\t\t\t<ListItem button selected={selected} onClick={this.itemClickHeandler.bind(this)}>\r\n\t\t\t    <ListItemText\r\n\t\t\t        primary={city.name}\r\n\t\t\t        secondary={ ('weather' in city)? Math.floor(+city.weather.main.temp) + '\\u2103' : null }/>\r\n\t\t\t    <ListItemSecondaryAction>\r\n\t\t\t        <IconButton aria-label=\"Delete\" onClick={removeCityAction}>\r\n\t\t\t            <DeleteIcon />\r\n\t\t\t        </IconButton>\r\n\t\t\t    </ListItemSecondaryAction>\r\n            </ListItem>\r\n\t\t)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getWeatherNowAction(this.props.city); //получаем погоду для элемента списка\r\n\t}\r\n\r\n\titemClickHeandler() {\r\n\t\tlet {city, setDetailCityAction} = this.props;\r\n\t\tsetDetailCityAction(city.uniqueId);\r\n\t}\r\n\r\n}\r\n\r\nexport default CitiesListItem","const API_KEY = '6df1ef1d951078e6cf82a1e62947f6f0';\r\nexport const ADD_CITY = 'ADD_CITY';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\nexport const SET_ACTIVE_CITY = 'SET_ACTIVE_CITY';\r\nexport const GET_WEATHER_REQUEST = 'GET_WEATHER_REQUEST';\r\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\r\nexport const SET_DETAIL_CITY = 'SET_DETAIL_CITY';\r\nexport const GET_FORECAST_REQUEST = 'GET_FORECAST_REQUEST';\r\nexport const GET_FORECAST_SUCCESS = 'GET_FORECAST_SUCCESS';\r\n\r\nexport function addCity(city) {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city,\r\n  }\r\n}\r\n\r\nexport function removeCity(listIndex) {\r\n\treturn {\r\n\t\ttype: REMOVE_CITY,\r\n\t\tpayload: listIndex\r\n\t}\r\n}\r\n\r\nexport function getWeatherNow(city) {\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t    \ttype: GET_WEATHER_REQUEST\r\n    \t});\r\n\r\n    \tlet { lat, lng } = city.coordinates;\r\n\t\t\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/weather?\r\n\t\t\tlat=${lat}\r\n\t\t\t&lon=${lng}\r\n\t\t\t&units=metric\r\n\t\t\t&lang=ru\r\n\t\t\t&appid=${API_KEY}`)\r\n\t\t  \t.then(function(response) {\r\n\t\t\t\treturn response.json();\r\n   \t\t\t})\r\n\t\t    .then(function(weather) {\r\n\t\t    \tdispatch({\r\n        \t\t\ttype: GET_WEATHER_SUCCESS,\r\n        \t\t\tpayload: weather,\r\n        \t\t\tuniqueId: city.uniqueId\r\n      \t\t\t});\r\n\t\t    })\r\n\t\t  \t.catch( console.log );\r\n\t}\r\n}\r\n\r\nexport function setDetailCity(uniqueId) {\r\n\treturn {\r\n\t\ttype: SET_DETAIL_CITY,\r\n\t\tpayload: uniqueId\r\n\t}\r\n}\r\n\r\nexport function getForecast(city) {\r\n\r\n\treturn dispatch => {\r\n\t\tdispatch({\r\n\t    \ttype: GET_FORECAST_REQUEST\r\n    \t});\r\n\r\n    \tlet { lat, lng } = city.coordinates;\r\n\t\t\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?\r\n\t\t\tlat=${lat}\r\n\t\t\t&lon=${lng}\r\n\t\t\t&units=metric\r\n\t\t\t&lang=ru\r\n\t\t\t&appid=${API_KEY}`)\r\n\t\t  \t.then(function(response) {\r\n\t\t\t\treturn response.json();\r\n   \t\t\t})\r\n\t\t    .then(function(forecast) {\r\n\t\t    \tlet forecastDays = {};  //Сортируем по дням\r\n\t\t    \tlet today = new Date().getDay();\r\n\t\t    \tforecast.list.forEach((item,i)=>{\r\n\t\t    \t\tlet day = new Date( Number(item.dt + '000') ).getDay();\r\n\t\t    \t\tif (day !== today) {\r\n\t\t    \t\t\tif ( Array.isArray(forecastDays[day]) ){\r\n\t\t    \t\t\t\tforecastDays[day].push(item);\r\n\t\t    \t\t\t} else {\r\n\t\t\t\t\t\t\tforecastDays[day] = [];\r\n\t\t\t\t\t\t\tforecastDays[day].push(item);\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\t\r\n\t\t    \t\t}\r\n\t\t    \t});\r\n\t\t    \tdispatch({\r\n        \t\t\ttype: GET_FORECAST_SUCCESS,\r\n        \t\t\tpayload: forecastDays,\r\n        \t\t\tuniqueId: city.uniqueId\r\n      \t\t\t});\r\n\t\t    })\r\n\t\t  \t.catch( console.log );\r\n\t}\r\n\r\n}","import React, {PureComponent} from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { List, ListItem, ListItemText, Paper, Typography, Avatar } from '@material-ui/core';\r\nimport CitiesListItem from './CitiesListItem';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { removeCity, getWeatherNow, setDetailCity } from '../../actions/citiesActions';\r\n\r\nclass CitiesList extends PureComponent {\r\n\r\n\trender() {\r\n\r\n\tconst cities = this.props.citiesList;\r\n\tconst { removeCityAction, getWeatherNowAction, setDetailCityAction } = this.props;\r\n\tconst { activeUniqueId } = this.props;\r\n\tconst empty = <ListItem>\r\n        \t\t\t\t<Avatar>\r\n          \t\t\t\t\t<InfoIcon/>\r\n        \t\t\t\t</Avatar>\r\n        \t\t\t\t<ListItemText \r\n        \t\t\t\t\tprimary=\"Список городов пуст\" \r\n        \t\t\t\t\tsecondary=\"Нужно добавить город в список\" />\r\n      \t\t\t\t</ListItem>\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<Paper className=\"cities-list\">\r\n\t\t\t\t<List component=\"nav\">\r\n\t\t\t\t\t{ cities.length ? null : empty }\r\n\t\t\t\t\t{cities.map( function(city, index){\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<CitiesListItem \r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tcity={city} \r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\tselected={city.uniqueId === activeUniqueId}\r\n\t\t\t\t\t\t\t\tgetWeatherNowAction={getWeatherNowAction}\r\n\t\t\t\t\t\t\t\tsetDetailCityAction={setDetailCityAction}\r\n\t\t\t\t\t\t\t\tremoveCityAction={removeCityAction.bind(null,index)} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} )}\r\n\t\t\t\t</List>\r\n\t\t\t</Paper>\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nCitiesList.propTypes = {\r\n\tcitiesList: propTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\treturn {\r\n\t\tactiveUniqueId: store.cities.activeUniqueId,\r\n\t\tcitiesList: store.cities.citiesList\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tremoveCityAction: index => dispatch(removeCity(index)),\r\n\t\tgetWeatherNowAction: city => dispatch(getWeatherNow(city)),\r\n\t\tsetDetailCityAction: uniqueId => dispatch(setDetailCity(uniqueId))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesList)","import React from 'react';\r\n\r\nconst Forecast = (props) => {\r\n\tconst { forecast } = props;\r\n\tconst sortedKeys = Object.keys(forecast).sort((a, b)=>{ return forecast[a][0].dt - forecast[b][0].dt }); \r\n\t//сортируем по дате ключи\r\n\treturn(\r\n\t\t<div className=\"forecast\">\r\n\t\t\t{ \tsortedKeys.map(function(day,index){\r\n\t\t\t\tlet item = forecast[day];\r\n\t\t\t\tlet date = new Date( Number(item[0]['dt'] + '000') );\r\n\t\t\t\tlet show = (itemArray) => {\r\n\t\t\t\t\treturn itemArray.length > 5 ? itemArray[5] : itemArray[itemArray.length - 1]\r\n\t\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={index} className=\"content-last\">\r\n\t\t\t\t\t\t<h6 style={{textTransform: 'capitalize'}}>\r\n\t\t\t\t\t\t\t{date.toLocaleString('ru-ru', {  weekday: 'long' })}\r\n\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t<div style={{textTransform: 'capitalize'}} className=\"data\">\r\n\t\t\t\t\t\t\t{date.getDate()} {date.toLocaleString('ru-ru', {  month: 'short' })}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<img src={`https://openweathermap.org/img/w/${show(item).weather[0].icon}.png`} alt=\" \" />\r\n\t\t\t\t\t\t<div style={{textTransform: 'capitalize'}} className=\"data\">\r\n\t\t\t\t\t\t\t{show(item).weather[0].description}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p>{Math.floor(show(item).main.temp) + '\\u2103'}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}) \r\n\t\t\t}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Forecast","import React, {PureComponent} from 'react';\r\nimport { Paper, Typography, Table, TableBody, TableRow, TableCell, LinearProgress } from '@material-ui/core';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Forecast from './Forecast';\r\n\r\nconst Detail = (props) => {\r\n\tconst {cityDetail} = props;\r\n\tconst {getForecastAction} = props;\r\n\r\n\tconst empty = <Typography variant=\"h6\" component=\"h5\">\r\n          \t\t\tВыберите нужный город из списка \r\n        \t\t  </Typography>;\r\n\r\n\treturn(\r\n\t\t<Paper elevation={1} style={{padding: '24px'}}>\r\n\t\t\t{ cityDetail && 'weather' in cityDetail ? <DetailForecast \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityDetail={cityDetail}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetForecastAction={getForecastAction}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tweather={cityDetail.weather} /> : empty } \r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nclass DetailForecast extends PureComponent {\r\n\r\n\trender() {\r\n\t\tconst { weather, cityDetail } = this.props;\r\n\t\tconst date = new Date().toLocaleString('ru', {year: 'numeric', month: 'long', day: 'numeric'});\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"content-top\">\r\n        \t\t<div className=\"top\">\r\n\t\t\t\t\t<div className=\"content-left\">\r\n\t\t\t\t\t\t<h6>{date}</h6>\r\n\t\t\t\t\t\t<h2>{Math.floor(weather.main.temp)}&#176;C</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content-right\">\r\n\t\t\t\t\t\t<h5 style={{textTransform: 'capitalize'}}>{weather.weather[0].description}</h5>\r\n\t\t\t\t\t\t<img src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`} alt=\" \" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content-table\">\r\n\t\t\t\t\t\t<Table style={{background: '#FFFFFF', fontSize: '13px'}}>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Атмосферное давление</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell><b>{weather.main.pressure}  гПа</b></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Влажность</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell><b>{weather.main.humidity}  %</b></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Скорость ветра</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell><b>{weather.wind.speed}  м/с</b></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell>Направление ветра</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<ArrowUpward \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{transform: `rotate(${weather.wind.deg}deg)`, color: '#DD4F43'}}/>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"forecast-wrap\">\r\n\t\t\t\t\t<h6 className=\"forecast-header\">\r\n\t        \t\t\tПрогноз:\r\n\t      \t\t\t</h6>\r\n\t      \t\t\t{'forecast' in cityDetail ? <Forecast forecast={cityDetail.forecast} /> : <LinearProgress /> }\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet {getForecastAction} = this.props;\r\n\t\tgetForecastAction(this.props.cityDetail);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tlet {getForecastAction} = this.props;\r\n\t\tlet {cityDetail} = this.props;\r\n\r\n\t\tsetTimeout(()=>{\r\n\t\t\tif(JSON.stringify(cityDetail) !== JSON.stringify(nextProps.cityDetail)) {\r\n\t\t\t\tgetForecastAction(nextProps.cityDetail);\r\n\t\t\t}\r\n\t\t},1000);\r\n\t}\r\n\r\n}\r\n\r\nexport default Detail","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CssBaseline, Grid, AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport './App.css';\r\n\r\nimport CitiesAdder from './components/CitiesAdder';\r\nimport CitiesList from './containers/CitiesList';\r\nimport Detail from './components/Detail';\r\n\r\nimport { addCity, getForecast } from './actions/citiesActions';\r\n\r\nclass App extends Component {\r\n\r\n\trender() {\r\n\t\tconsole.log('-TEST-');\r\n\t\tconst {addCityAction, getForecastAction} = this.props;\r\n\t\tconst { activeUniqueId } = this.props;\r\n\t\tconst cityDetail = this.props.cities.find(function(city){\r\n\t\t\treturn city.uniqueId === activeUniqueId ? true : false\r\n\t\t});\r\n\r\n\t\treturn(\r\n\t\t\t<CssBaseline>\r\n\t\t\t\t<AppBar position=\"static\" color=\"primary\" style={{marginBottom: '40px'}}>\r\n\t\t\t        <Toolbar>\r\n\t\t\t          <Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t            Погода в мире\r\n\t\t\t          </Typography>\r\n\t\t\t        </Toolbar>\r\n      \t\t\t</AppBar>\r\n      \t\t\t<Grid className=\"container\" container spacing={16}>\r\n      \t\t\t\t<Grid className=\"aside-wrap\" item xs={12} md={3}>\r\n      \t\t\t\t\t<CitiesAdder addCityAction={addCityAction} className=\"cities-adder\" />\r\n\t\t\t\t\t\t<CitiesList className=\"cities-list\"/>\r\n      \t\t\t\t</Grid>\r\n      \t\t\t\t<Grid item xs={12} md={9}>\r\n      \t\t\t\t\t<Detail cityDetail={cityDetail} getForecastAction={getForecastAction} />\r\n      \t\t\t\t</Grid>\r\n      \t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t</CssBaseline>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n\treturn {\r\n\t\tcities: store.cities.citiesList,\r\n\t\tactiveUniqueId: store.cities.activeUniqueId\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\taddCityAction: city => dispatch(addCity(city)),\r\n\t\tgetForecastAction: city => dispatch(getForecast(city))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { ADD_CITY, \r\n\t\t REMOVE_CITY, \r\n\t\t /*GET_WEATHER_REQUEST, */\r\n\t\t GET_WEATHER_SUCCESS,\r\n\t\t SET_DETAIL_CITY,\r\n\t\t GET_FORECAST_SUCCESS,\r\n\t\t  } from '../actions/citiesActions';\r\n\r\nvar initialState = {\r\n\t\tcitiesList: [{\r\n\t\t\tname: 'Киев',\r\n\t\t\tcoordinates: {lat: 50.4501, lng: 30.523400000000038},\r\n\t\t\tuniqueId: new Date().valueOf()\r\n\t\t}],\r\n\t\tactiveUniqueId: null\r\n\t}\r\n\r\nexport default function citiesReducer(state = initialState, action) {\r\n\tconst copy = [...state.citiesList];\r\n\r\n\tswitch(action.type) {\r\n\t\tcase ADD_CITY:\r\n\t\t\treturn {...state, citiesList: [...state.citiesList, action.payload] };\r\n\t\tcase REMOVE_CITY:\r\n\t\t\t\tcopy.splice(action.payload, 1);\r\n\t\t\treturn {...state, citiesList: copy, cityDetail: {} };\r\n\t\tcase GET_WEATHER_SUCCESS:\r\n\t\t\tcopy.some(function(item, index){\r\n\t\t\t\tif(item.uniqueId === action.uniqueId) {\r\n\t\t\t\t\tcopy.splice(index, 1, {...item, weather: action.payload});\r\n\t\t\t\t\treturn true; //оставливаем перебор если Id совпадают \r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\treturn {...state, citiesList: copy}\r\n\t\tcase SET_DETAIL_CITY:\r\n\t\t\treturn {...state, activeUniqueId: action.payload}\r\n\t\tcase GET_FORECAST_SUCCESS:\r\n\t\t\tcopy.some(function(item, index){\r\n\t\t\t\tif(item.uniqueId === action.uniqueId) {\r\n\t\t\t\t\tcopy.splice(index, 1, {...item, forecast: action.payload});\r\n\t\t\t\t\treturn true; //оставливаем перебор если Id совпадают \r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t});\r\n\t\t\treturn {...state, citiesList: copy}\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport citiesReducer from './cities';\r\n\r\nexport const rootReducer = combineReducers({\r\n  cities: citiesReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer} from '../reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { storeSaver } from './storeSaver';\r\n\r\nconst arg = [rootReducer, applyMiddleware(thunk, storeSaver)];\r\n\tif(localStorage.getItem('savedStore') !== null) {\r\n\t\targ.splice(1,0,JSON.parse(localStorage.getItem('savedStore')));\r\n\t}\r\nexport const store = createStore.apply(null, arg);","import { ADD_CITY, REMOVE_CITY } from '../actions/citiesActions';\r\n\r\nexport const storeSaver = store => next => action => {\r\n\tif( action.type === ADD_CITY || action.type === REMOVE_CITY ){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tlocalStorage.setItem('savedStore', JSON.stringify(store.getState()) );\r\n\t\t}, 0);\r\n\t\t\r\n\t}\r\n\r\n  \treturn next(action);\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\n\n\nReactDOM.render(\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<App />\n\t\t\t\t</Provider>, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}